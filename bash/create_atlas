#!/bin/bash
display_help() {
	echo "Usage: $(basename $0) OPTIONS [VERTEX_SHADER_FILE] [FRAGMENT_SHADER_FILE]

OPTIONS:
-h --help                show this help	
-p --padding             padding default is 0
-a --atlas               should be the name of the created atlas, default \"atlas.png\"
-j --json                the name of the created json-file, default is the same name as the image.
-m --min                 the min-size for widht/height in pixels, default is 0
-M --max                 the max-height in pixels, default is 2048

Creates a image atlas and a json file defining all sprites in pixi format.
First non-flag and belonging argument is the image files to create the atlas of.

Example:
	Creates atlas named Test.png and json file named Test.json 
	$(basename $0) -p 30 -a Test.png -j Test.json *.png
"
}

while :; do
    case "$1" in
		-e | --expand)
			EXPAND="$2"
			shift 2
			;;
		-p | --padding)
			MARGIN="$2"
			shift 2
			;;
		-a | --atlas)
			ATLAS="$2"
			shift 2
			;;
		-j | --json)
			JSON_FILE="$2"
			shift 2
			;;
		-m | --min)
			MIN_SIZE="$2"
			shift 2
			;;
		-M | --max)
			MAX_SIZE="$2"
			shift 2
			;;
		-v | --verbose)
			VERBOSE="Verbose"
			shift 2
			;;
		-h | --help)
			display_help
			exit 0
			;;
		--) # End of all options
			shift
			break
			;;
		-*)
			printf "Error: Unknown option: $1\n" >&2
			exit 1
			;;
		*)  # No more options
			FILES=$@
			shift
			break
    esac
done

main() {
	ATLAS=${ATLAS:-'atlas.png'}
	local tmp_json=$(echo "$ATLAS" | cut -d '.' -f1)
	JSON_FILE=${JSON_FILE:-"$tmp_json.json"}
	MARGIN=${MARGIN:-0}
	MAX_SIZE=${MAX_SIZE:-2048}
	MIN_SIZE=${MIN_SIZE:-0}
	MARGIN=$MARGIN ATLAS=$ATLAS EXPAND=$EXPAND MAX_SIZE=$MAX_SIZE MIN_SIZE=$MIN_SIZE mkatlas $FILES > "$JSON_FILE"
}

main $@
