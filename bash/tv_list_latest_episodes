#!/bin/bash
display_help() {
	echo "Usage: $(basename $0) OPTIONS

List the latest tv-show episode/subtitle in your possesion.

OPTIONS:
	-h --help                show this help
	-d --src                 the root folder where the tv-shows are located

Example:
	$(basename $0)"
printf	"
	Black.Sails.S04E09.mkv
	Modern.Family.S08E17.mkv
	Crashing.S01E05.mkv" | grep --color=always "[sS][0-9][0-9][eE][0-9][0-9]\|[0-1][0-9][0-9][0-9]"
echo ""
}

print_latest_episode_in_each_tv_folder() {
	local src="$1"
	# Print the latest episode in each "tv-folder"
	ls "$src" | while read tv_folder; do
		if [ -d "$src/$tv_folder" ]; then # Check if it is a folder?
			# Extract the latest episode.
			local episode=$(find "$src/$tv_folder" -regex '^.*.\([mM][kK][vV]\|[mM][pP]4\|[aA][vV][iI]\)$' | tv_info -d -f | sort -r | head -1 | cut -d$'\t' -f3) # >&2
			# Tag the episode with the date.
			episode=$(date '+%Y-%m-%d %H:%M:%S' -r "$episode")"\t"$(basename "$episode")
			printf "$episode\n"
		fi
	done
}

main() {
	local src="$TV_SHOWS_DST"
	
	while :; do
		case "$1" in
		-h | --help)
				display_help
				exit 0
				;;
		-s | --src)
			shift
			src="$1"
			shift
			;;
		--) # End of all options
			shift
			break
			;;
		-*)
			echo "Error: Unknown option: $1" >&2
			exit 1
			;;
		*)  # No more options
			filename=$@
			shift
			break
		esac
	done

	if [ ! -d "$src" ]; then
		echo $(print_date)" Source folder does not exist" >&2
		exit 1
	fi

	# List only the name of the latest episodes. And highlight the season and episode number.
	print_latest_episode_in_each_tv_folder "$src" | sort -r | cut -d$'\t' -f2 | grep --color=always "[sS][0-9][0-9][eE][0-9][0-9]\|[0-1][0-9][0-9][0-9]"
}

main "$@"
