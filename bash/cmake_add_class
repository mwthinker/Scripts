#!/bin/bash
if [ "$1" == "-h" ] || [ "$1" == "--help" ]; then	
	echo "Usage: $(basename $0) OPTIONS

Create a C++ class and add it to CMakeLists.txt
The script will ask questions to define the C++ class.

OPTIONS:
	-h --help                show this help
"

	printf -- "------------------------other_name.h---------------------\n"
	echo "#ifndef OTHERNAME_H
#define OTHERNAME_H

namespace any_name {

	class Other_name {
	public:

	};

} // ANY_NAME.

#endif // OTHERNAME_H\n"
	printf -- "-----------------------------------------------------\n"
	printf -- "--------------------other_name.cpp-------------------\n"
	echo "#ifndef OTHERNAME_H
#define OTHERNAME_H

#include \"other_name.h\"

namespace any_name {

} // Namespace ANY_NAME.

#endif // OTHERNAME_H"
	printf -- "-----------------------------------------------------\n"
	exit 0
fi

main() {
	printf "class name: "
	read -r class_name
	if [ -z "$class_name" ]; then
		printf "Aborted, no class name"
		exit 1
	fi
	printf "namespace []: "
	read -r namespace	
	
	printf "Add cpp file [y/N]? "
	read -r add_cpp
	
	printf "source folder [src]: "
	read -r src_folder
	if [ -z "$src_folder" ]; then
		src_folder="src"
	fi
	
	printf "keyword [set(SOURCES]: "
	read -r keyword
	if [ -z "$keyword" ]; then
		keyword="set(SOURCES"
	fi
	
	header_file="$src_folder/${class_name,,}.h"
	cpp_file="$src_folder/${class_name,,}.cpp"
	
	if [ -f "$header_file" ]; then
		echo "$header_file exist, abort" >&2
		exit 1
	fi
	
	if [ -f "$cpp_file" ]; then
		echo "$cpp_file exist, abort" >&2
		exit 1
	fi
		
	if [ -z "$namespace" ]; then
		printf "#ifndef ${class_name^^}_H
#define ${class_name^^}_H

class $class_name {
public:

};

#endif // ${class_name^^}_H
" > "$header_file"
	else
		printf "#ifndef ${class_name^^}_H
#define ${class_name^^}_H

namespace $namespace {

	class $class_name {
	public:

	};

} // Namespace $namespace.
	
#endif // ${class_name^^}_H
" > "$header_file"
	fi
	
	cp "CMakeLists.txt" "CMakeLists.txt.backup"

	cmake_add_source "$header_file" "$keyword"
	
	case $add_cpp in
		[yY])
			cmake_add_source "$cpp_file" "$keyword"
			if [ -z "$namespace" ]; then
				printf "#include \"${class_name,,}.h\"
" > "$cpp_file"
			else
				printf "#include \"${class_name,,}.h\"

namespace $namespace {

} // Namespace $namespace.
" > "$cpp_file"
			fi
			;;
		*)
			printf ""
			;;
	esac
}

main $@
